{"name":"Zf2-browscap","tagline":"ZF2 Browscap is a Zend Framework 2 module that provides browser capabilities tools","body":"ZF2 Browscap, v1.1\r\n=======\r\n\r\n[![Build Status](https://travis-ci.org/neilime/zf2-browscap.png?branch=master)](https://travis-ci.org/neilime/zf2-browscap)\r\n[![Latest Stable Version](https://poser.pugx.org/neilime/zf2-browscap/v/stable.png)](https://packagist.org/packages/neilime/zf2-browscap)\r\n[![Total Downloads](https://poser.pugx.org/neilime/zf2-browscap/downloads.png)](https://packagist.org/packages/neilime/zf2-browscap)\r\n![Code coverage](https://raw.github.com/zf2-boiler-app/app-test/master/ressources/100%25-code-coverage.png \"100% code coverage\")\r\n\r\nNOTE : If you want to contribute don't hesitate, I'll review any PR.\r\n\r\nIntroduction\r\n------------\r\n\r\nZF2 Browscap is a Zend Framework 2 module that provides an improved [get_browser](http://www.php.net/manual/en/function.get-browser.php) function. \r\nThis module could be standalone if \"browscap\" configuration setting in php.ini is undefined or does not point to the correct location of the browscap.ini file. \r\n\r\nContributing\r\n------------\r\n\r\nIf you wish to contribute to ZF2 Browscap, please read both the [CONTRIBUTING.md](CONTRIBUTING.md) file.\r\n\r\nRequirements\r\n------------\r\n\r\n* [Zend Framework 2](https://github.com/zendframework/zf2) (2.*)\r\n\r\n## Installation\r\n\r\n### Main Setup\r\n\r\n#### By cloning project\r\n\r\n1. Install [browscap](https://github.com/browscap/browscap) by cloning it into `./vendor/`.\r\n2. Clone this project into your `./vendor/` directory.\r\n\r\n#### With composer\r\n\r\n1. Add this project in your composer.json:\r\n\r\n    ```json\r\n    \"require\": {\r\n        \"neilime/zf2-browscap\": \"dev-master\"\r\n    }\r\n    ```\r\n\r\n2. Now tell composer to download __ZF2 Browscap__ by running the command:\r\n\r\n    ```bash\r\n    $ php composer.phar update\r\n    ```\r\n\r\n#### Post installation\r\n\r\n1. Enabling it in your `application.config.php`file.\r\n\r\n    ```php\r\n    <?php\r\n    return array(\r\n        'modules' => array(\r\n            // ...\r\n            'Neilime\\Browscap',\r\n        ),\r\n        // ...\r\n    );\r\n    ```\r\n\r\n## Configuration\r\n\r\n * string `browscap_ini_path` : (optionnal) only needed if the native php function [get_browser](http://www.php.net/manual/en/function.get-browser.php) is unavailable or if `allows_native_get_browser` option is set to false. Define the borwscap.ini file path (allows locale or remote file)\r\n * Zend\\Cache\\Storage\\StorageInterface|string|array `cache`: (optionnal) Define the cache storage adapter to store parsed browscap.ini.    \r\n   Allows classname and service retrieving an `Zend\\Cache\\Storage\\StorageInterface`, or an array to be use with  `Zend\\Cache\\StorageFactory::factory`.\r\n   This not only saves you from loading and parsing the \"browscap.ini\" each time, but also guarantees an optimized loading procedure.\r\n * boolean `allows_native_get_browser`: Define if the native php function [get_browser](http://www.php.net/manual/en/function.get-browser.php) could be used if it's available.\r\n \r\n## How to use _ZF2 Browscap_\r\n\r\n__ZF2 Browscap__ module provides a service, helper for views and plugin for controllers\r\n\r\n1. Call Browscap with the service manager\r\n\r\n\t```php\r\n\t\r\n\t/* @var $serviceManager \\Zend\\ServiceManager\\ServiceLocatorInterface */\t\r\n\t\r\n   \t$browscap = $serviceManager->get('BrowscapService'); //Retrieve \"\\Neilime\\Browscap\\BrowscapService\" object\r\n   \tvar_dump($browscap->getBrowser()); //Display an object which will contain various data elements representing, for instance, the browser's major and minor version numbers and ID string;\r\n   \t```\r\n\r\n2. Call Browscap in a controller\r\n\t\"get_browser\" plugin expects the same params as the native php function [get_browser](http://www.php.net/manual/en/function.get-browser.php).\r\n\r\n \t```php\r\n \t$browscap = $this->get_browser(); //Retrieve an object\r\n   \techo $browscap->parent;\r\n \t\r\n   \t$browscap = $this->get_browser(null,true); //Retrieve an array\r\n   \techo $browscap['parent'];\r\n   \t\r\n   \t$browscap = $this->get_browser(\r\n   \t\t\\Zend\\Http\\Header\\UserAgent::fromString('User-Agent: Mozilla/5.0 (Linux; Android 4.0.4; Desire HD Build/IMM76D) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Mobile Safari/535.19')\r\n   \t); //Retrieve an object with an arbitrary user agent\r\n   \techo $browscap->parent;   \t\r\n    ```\r\n    \r\n3. Call Browscap in a view\r\n\t\"get_browser\" helper expects the same params as the native php function [get_browser](http://www.php.net/manual/en/function.get-browser.php).\r\n\r\n \t```php\r\n   \t$browscap = $this->get_browser(); //Retrieve an object\r\n   \techo $browscap->parent;\r\n   \t\r\n   \t$browscap = $this->get_browser(null,true); //Retrieve an array\r\n   \techo $browscap['parent'];\r\n   \t   \t\r\n   \t$browscap = $this->get_browser(\r\n   \t\t\\Zend\\Http\\Header\\UserAgent::fromString('User-Agent: Mozilla/5.0 (Linux; Android 4.0.4; Desire HD Build/IMM76D) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Mobile Safari/535.19')\r\n   \t); //Retrieve an object with an arbitrary user agent\r\n   \techo $browscap->parent;\r\n   \t```\r\n\r\n## Tools\r\n\r\n_ZF2 Browscap_ provides console tools.\r\n\r\n### Features\r\n\r\n    Load & parse \"browscap.ini\" file (or update cached browscap.ini)\r\n\r\n### Usage\r\n\r\n#### Load & parse \"browscap.ini\" file \r\n\r\n    php public/index.php load-browscap\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}